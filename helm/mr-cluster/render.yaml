---
# Source: mr-cluster/templates/coordinator-workers-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mr-cluster-mr-cluster-workers
  labels:
    app.kubernetes.io/name: mr-cluster
    app.kubernetes.io/instance: mr-cluster
    app.kubernetes.io/version: 1.2
    app.kubernetes.io/managed-by: Helm
data:
  workers: ""
---
# Source: mr-cluster/templates/elasticsearch-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mr-cluster-mr-cluster-elasticsearch
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: 
  resources:
    requests:
      storage: 5Gi
---
# Source: mr-cluster/templates/minio-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mr-cluster-mr-cluster-minio
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: 
  resources:
    requests:
      storage: 5Gi
---
# Source: mr-cluster/templates/coordinator-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mr-cluster-mr-cluster-coordinator
spec:
  type: NodePort
  selector:
    app: mr-cluster-mr-cluster-coordinator
  ports:
  - port: 8080
    targetPort: 8080
    nodePort: 30080
---
# Source: mr-cluster/templates/elasticsearch-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mr-cluster-mr-cluster-elasticsearch
spec:
  type: ClusterIP
  selector:
    app: mr-cluster-mr-cluster-elasticsearch
  ports:
  - port: 9200
    targetPort: 9200
---
# Source: mr-cluster/templates/kibana-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mr-cluster-mr-cluster-kibana
spec:
  type: NodePort
  selector:
    app: mr-cluster-mr-cluster-kibana
  ports:
  - port: 5601
    targetPort: 5601
    nodePort: 30561
---
# Source: mr-cluster/templates/minio-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mr-cluster-mr-cluster-minio
spec:
  type: NodePort
  selector:
    app: mr-cluster-mr-cluster-minio
  ports:
  - name: api
    port: 9000
    targetPort: 9000
    nodePort: 30900
  - name: console
    port: 9001
    targetPort: 9001
    nodePort: 30901
---
# Source: mr-cluster/templates/worker-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mr-cluster-mr-cluster-worker
spec:
  clusterIP: None
  selector:
    app: mr-cluster-mr-cluster-worker
  ports:
    - name: http
      port: 8090
      targetPort: 8090
---
# Source: mr-cluster/templates/coordinator-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mr-cluster-mr-cluster-coordinator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mr-cluster-mr-cluster-coordinator
  template:
    metadata:
      labels:
        app: mr-cluster-mr-cluster-coordinator
    spec:
      serviceAccountName: coordinator-sa
      initContainers:
        - name: wait-for-elasticsearch
          image: busybox:1.34
          command:
            - sh
            - -c
            - |
              until nc -z mr-cluster-mr-cluster-elasticsearch 9200; do
                echo "Waiting for Elasticsearchâ€¦"; sleep 5
              done
      containers:
      - name: coordinator
        image: "mirongaskov2005/mr-framework-app:1.2"
        command:
          - java
          - -jar
          - mr-app-1.2.jar
          - --logs
          - http://mr-cluster-mr-cluster-elasticsearch:9200/mr-logs-index/_doc
          - coordinator
          - http://0.0.0.0:8080
        ports:
          - containerPort: 8080
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: CONFIGMAP_NAME
            value: "mr-cluster-mr-cluster-workers"
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 2
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          failureThreshold: 3
---
# Source: mr-cluster/templates/elasticsearch-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mr-cluster-mr-cluster-elasticsearch
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mr-cluster-mr-cluster-elasticsearch
  template:
    metadata:
      labels:
        app: mr-cluster-mr-cluster-elasticsearch
    spec:
      containers:
      - name: elasticsearch
        image: "elasticsearch:8.7.0"
        env:
        - name: discovery.type
          value: "single-node"
        - name: xpack.security.enabled
          value: "false"
        - name: ES_JAVA_OPTS
          value: "-Xms512m -Xmx512m"
        ports:
        - containerPort: 9200
        volumeMounts:
        - name: data
          mountPath: /usr/share/elasticsearch/data
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: mr-cluster-mr-cluster-elasticsearch
---
# Source: mr-cluster/templates/kibana-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mr-cluster-mr-cluster-kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mr-cluster-mr-cluster-kibana
  template:
    metadata:
      labels:
        app: mr-cluster-mr-cluster-kibana
    spec:
      containers:
      - name: kibana
        image: "kibana:8.7.0"
        env:
        - name: ELASTICSEARCH_HOSTS
          value: "http://mr-cluster-mr-cluster-elasticsearch:9200"
        ports:
        - containerPort: 5601
---
# Source: mr-cluster/templates/minio-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mr-cluster-mr-cluster-minio
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mr-cluster-mr-cluster-minio
  template:
    metadata:
      labels:
        app: mr-cluster-mr-cluster-minio
    spec:
      containers:
      - name: minio
        image: "minio/minio:latest"
        args:
        - "server"
        - "/data"
        - "--console-address"
        - ":9001"
        env:
        - name: MINIO_ROOT_USER
          value: "minioadmin"
        - name: MINIO_ROOT_PASSWORD
          value: "minioadmin"
        ports:
        - name: api
          containerPort: 9000
        - name: console
          containerPort: 9001
        volumeMounts:
        - name: data
          mountPath: /data
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: mr-cluster-mr-cluster-minio
---
# Source: mr-cluster/templates/worker-stateful-set.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mr-cluster-mr-cluster-worker
spec:
  serviceName: mr-cluster-mr-cluster-worker
  replicas: 3
  selector:
    matchLabels:
      app: mr-cluster-mr-cluster-worker
  template:
    metadata:
      labels:
        app: mr-cluster-mr-cluster-worker
    spec:
      containers:
      - name: worker
        image: "mirongaskov2005/mr-framework-app:1.2"
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        command:
        - "java"
        - "-jar"
        - "mr-app-1.2.jar"
        - "worker"
        - "http://mr-cluster-mr-cluster-coordinator:8080"
        - "http://$(POD_NAME).mr-cluster-mr-cluster-worker.default.svc.cluster.local:8090"
        ports:
        - name: http
          containerPort: 8090
        readinessProbe:
          httpGet:
            path: /health
            port: 8090
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 2
        livenessProbe:
          httpGet:
            path: /health
            port: 8090
          initialDelaySeconds: 10
          periodSeconds: 5
          failureThreshold: 3
---
# Source: mr-cluster/templates/minio-init-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: mr-cluster-mr-cluster-minio-init
  annotations:
    "helm.sh/hook": post-install,post-upgrade
spec:
  template:
    spec:
      containers:
      - name: mc
        image: minio/mc:latest
        command:
        - sh
        - -c
        - |
          until mc alias set myminio http://mr-cluster-mr-cluster-minio:9000 \
            minioadmin minioadmin \
            2>/dev/null; do
            echo Waiting for MinIO...
            sleep 2
          done
          mc mb myminio/jobs || true
      restartPolicy: OnFailure
